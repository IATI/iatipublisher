<?php

namespace Tests\Unit\Csv;

use App\CsvImporter\Entities\Activity\Components\Elements\Title;
use Illuminate\Support\Arr;

class TitleCsvTest extends CsvBaseTest
{
    private string $csvFilePath = 'tests/Unit/TestFiles/Csv/';

    /**
     * checks if it throws validation if title empty.
     *
     * @return void
     * @test
     */
    public function check_if_throws_validation_if_title_empty(): void
    {
        $csvFile = $this->csvFilePath . 'title_empty.csv';
        $this->signIn();
        $this->setCsvFilePath($csvFile);
        $this->initializeCsv($this->title_empty_data());
        $rows = $this->getCsvRows($csvFile);

        $errors = [];

        foreach ($rows as $row) {
            $title = new Title($row, $this->validation);
            $title->validate()->withErrors();

            if (!empty($title->errors()) || !empty($title->criticals()) || !empty($title->warnings())) {
                $errors[] = $title->errors() + $title->criticals() + $title->warnings();
            }
        }

        $this->assertContains('The activity title is required.', Arr::flatten($errors));
    }

    /**
     * sets of data with empty title.
     *
     * @return array
     */
    public function title_empty_data(): array
    {
        $data = $this->getPerfectData();
        $data['Activity Title'] = [];

        return $data;
    }

    /**
     * @return void
     */
    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->deleteTitleCsvFiles();
    }

    /**
     * @return void
     */
    public function deleteTitleCsvFiles(): void
    {
        $csvFiles = glob(__DIR__ . '/../TestFiles/Csv/title_*.csv');
        foreach ($csvFiles as $file) {
            unlink($file);
        }
    }
}
